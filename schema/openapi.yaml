openapi: 3.0.2
info:
  title: Spark Studio Salem ACCX Open Access 4.0 API
  description: >-
    This service provides a method for interacting with the ACCX Open Access 4.0 module.
  version: "1.0"
  contact: {}
paths:
  /status:
    get:
      operationId: statusGet
      x-eov-operation-handler: statusGet
      tags:
        - Device
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DeviceStatus'
  /time:
    get:
      operationId: timeGet
      x-eov-operation-handler: timeGet
      tags:
        - Device
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/DateTime"
  /user/{userId}:
    delete:
      operationId: userDelete
      x-eov-operation-handler: userDelete
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UserId'
      responses:
        204:
          description: No Content
        404:
          description: Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: userGet
      x-eov-operation-handler: userGet
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UserId'
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: userPut
      x-eov-operation-handler: userPut
      tags:
        - Users
      description: >-
        Update an existing user, changing their userMask or badge. In order to prevent accidentally overwriting an existing user's entry the user's current badge value must also be submitted as part of this request.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UserId'
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                badge:
                  $ref: '#/components/schemas/Badge'
                currentBadge:
                  $ref: '#/components/schemas/Badge'
                userMask:
                  $ref: '#/components/schemas/UserMask'
              required:
                - badge
                - currentBadge
                - userMask
      responses:
        204:
          description: OK
        400:
          description: Bad Request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users:
    get:
      operationId: usersGet
      x-eov-operation-handler: usersGet
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
components:
  schemas:
    Alarm:
      type: object
      properties:
        id:
          type: string
        armedState:
          type: string
          enum:
            - armed
            - chimeOnly
            - disarmed
        sirenState:
          type: string
          enum:
            - activated
            - delayed
            - disarmed
      required:
        - armedState
        - id
        - sirenState
    DateTime:
      type: string
      format: date-time
      example: "2020-01-01T00:00:00.000Z"
    DeviceStatus:
      type: object
      properties:
        alarms:
          type: array
          items:
            $ref: '#/components/schemas/Alarm'
        doors:
          type: array
          items:
            $ref: '#/components/schemas/Door'
      required:
        - alarms
        - doors
    Door:
      type: object
      properties:
        id:
          type: string
        isLocked:
          type: boolean
        isOpen:
          type: boolean
      required:
        - id
        - isLocked
        - isOpen
    ErrorResponse:
      type: string
    Badge:
      type: string
    User:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UserId'
        badge:
          $ref: '#/components/schemas/Badge'
        userMask:
          $ref: '#/components/schemas/UserMask'
      required:
        - id
        - userMask
        - badge
    UserId:
      type: string
    UserMask:
      type: integer
      minimum: 0
      maximum: 255
      description: >-
        A UserMask is a byte value between 0 and 255 that may be used in user operations to apply actions to large swaths of users simultaneously, instead of applying updates user-by-user.

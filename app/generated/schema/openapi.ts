/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/time": {
    get: operations["timeGet"];
  };
  "/users": {
    get: operations["usersGet"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * Format: date-time 
     * @example 2020-01-01T00:00:00.000Z
     */
    readonly DateTime: string;
    readonly User: {
      readonly id: string;
      readonly tag: string;
      readonly userMask: components["schemas"]["UserMask"];
    };
    /** @description A UserMask is a byte value between 0 and 255 that may be used in user operations to apply actions to large swaths of users simultaneously, instead of applying updates user-by-user. */
    readonly UserMask: number;
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  timeGet: {
    responses: {
      /** @description OK */
      200: {
        content: {
          readonly "application/json": components["schemas"]["DateTime"];
        };
      };
    };
  };
  usersGet: {
    responses: {
      /** @description OK */
      200: {
        content: {
          readonly "application/json": readonly (components["schemas"]["User"])[];
        };
      };
    };
  };
}
